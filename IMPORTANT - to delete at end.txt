Github Collab Steps:
1. git clone
2. git checkout -b feat/xxx
    - ‘-b’ = to create a new branch,
    - ‘xxx’ = name of your component,
    - “feat/xxx” = ‘feat’ stands for feature, so use ‘feat’ if you’re creating a new feature | “fix/xxx” = to fix code from that component (see note below).
3. Proceed to code on VS code! (you can now make changes to your own branch, look at bottom-left of your VS code to check branch)
4. git flow (git status, git add . , git commit -m “…”)
5. git pull (this step is crucial as it pulls your teammates’ codes from the main branch & ensures that you have the most updated version on ur VS code)
6. git branch (optional step: to check which branch you’re on)
7. git checkout feat/xxx (where ‘xxx’ is the name of your component, no need to add “-b” since we are not creating a new branch)
8. git merge main (now you’ll be able to review & accept the changes on VS code)
9. git flow (git status, git add . , git commit -m “…”)
10. git push origin feat/xxx (where ‘xxx’ is the name of your component)
11. Head over to Github --> create Pull Request on Github
12. Please ask your teammates to review and accept the changes
13. Click confirm “Merge Pull Request”
*note:
whenever we do pull requests, good to run (“npm i” if u have yet to install) “npm start” to verify if the “pulled” version works :smile: (or isBadVersion === ‘true’, iykyk)
when naming our branch we can use “feat/xxx” if we’re creating a new feature or “fix/xxx” if we’re fixing code from that already merged component!